package com.codename1.tests.scandit;


import com.codename1.components.ToastBar;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.TextArea;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.scandit.*;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.GridLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class ScanditTest {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");
        CodeScanner.setLicenseKey("Ad7L9CQiP578RazjfyMTHog+ONxQFtA3MQpEzDx9fBjzUXhj+3YaKy5EkfIjbVnmPU4l/WNxMj0OREFboVd4LXBkchZufXmxTSiSvxZZrAwOXDLOC2pw4m5b9hKqRJj2zXkN3QMq06UYf8fHGFY5xYzpRIYUOS0zeHsz6wcTES2D9zF+WV552nguoMWYsWK/sN6Eg+xa4a2lm66h+VKjk2+of6Gp0dTLeHyvR0he3pVzYGx6pZNaMZEw3QDYKp1m8fpy7JpmnxVG5UFudClbbTDNgE8w7emZ0fRx6loL1eGTxad7zz43hRWd9wpjRXicT6t4uqluf4UECKuoiWk2D3SZJLgwS8N4y7ra689n4PaK4EQDO+rX0On1V7+U2+zB1mh2qyiyHkeLhIMxIIGOzSTRqRQvAIvv6Od49bTSVj6lz+Gs1jaVbTRlYoO/cq0/siUESdFc9HhYZEoRbZt9EDiaj3itTu5rDmbSXJl3tklM46NFe4HZ06cPAHjpZcRxBY9B+BfmuO36TR6amj0s4/K4A8PcvEMFft/hyQjQx2nj4Bn+sdUxfYKf/zkctUfY/QXprxTYNFnUyG/Bl1TRcoi7LOLLJlkLH4HpI9Gbz22DiMn9cp5PnhYI6GmnlvyuNWT11kV/c4Zxd3KNdetGOzfjqLXrPhkb4erBcCrpQO0K9javfCDqQlpJS2WjTSS6lNcYjmriLqKMnAqO7n6wG+9uEImbCDaf4rZ6l3mxOZg68aXb0TvekgZon1UhT4vXlgIuj2/8yJ+/R+UYRKS+jQNz/JB1/9eZlirEV1pP3TjWrho34n/+PA==");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);
        CodeScanner.install();
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Hi World", new BorderLayout());
        TextArea ta = new TextArea();
        ta.getStyle().setFgColor(0x0);
        Button scanBarBtn = new Button("Bar Code");
        scanBarBtn.addActionListener(e->{
            if (!CodeScanner.isSupported()) {
                ToastBar.showErrorMessage("CodeScanner not supported on this platform");
            }
            CodeScanner.getInstance().scanBarCode(new ScanResult() {

                @Override
                public void scanCompleted(String contents, String formatName, byte[] rawBytes) {
                    Log.p("Scan completed "+contents+" format "+formatName);
                    ta.setText(contents);
                    
                }

                @Override
                public void scanCanceled() {
                    Log.p("Scan canceled");
                }

                @Override
                public void scanError(int errorCode, String message) {
                    Log.p("Scan error "+errorCode+": "+message);
                }
            });
        });
        Button scanQRBtn = new Button("QR Code");
        scanQRBtn.addActionListener(e->{
            if (!CodeScanner.isSupported()) {
                ToastBar.showErrorMessage("CodeScanner not supported on this platform");
            }
            CodeScanner.getInstance().scanQRCode(new ScanResult() {

                @Override
                public void scanCompleted(String contents, String formatName, byte[] rawBytes) {
                    Log.p("Scan completed "+contents+" format "+formatName);
                    ta.setText(contents);
                    
                }

                @Override
                public void scanCanceled() {
                    Log.p("Scan canceled");
                }

                @Override
                public void scanError(int errorCode, String message) {
                    Log.p("Scan error "+errorCode+": "+message);
                }
            });
        });
        hi.add(BorderLayout.CENTER, ta);
        hi.add(BorderLayout.SOUTH, GridLayout.encloseIn(scanBarBtn, scanQRBtn));
        
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
